#!/usr/bin/env python3

"""
Simple snakemake script for iterating over map file to run the `fomes` SIR
stochatstic, dynamic network simulator
"""

from __future__ import print_function

import os
import sys
import yaml
import re
import pandas as pd

## read project-specific configuration options and functions
RROOT = config["rroot"]
OUTROOT = config["outdir"]
GEODISTROOT = config["geodistroot"]
def read_manifest(file_path):
    # read manifest and extract out relevant params
    df = pd.read_csv(file_path, sep='\t')
    simparams = df.to_dict()
    return simparams

## read simulation manifest as dictionary which we can iterate through
sim_map = read_manifest(config["simmap"])
# Manually transform dictionary to map "outpath" values to our wanted parameter values
sim_dict = {sim_map['outpath'][i]:
    {'input': RROOT + sim_map['input'][i]}
for i in range(len(sim_map['outpath']))}


# rules
rule all:
    input: expand(OUTROOT + "{outpath}", outpath = list(sim_map["outpath"].values()))

rule run_simulation:
    output: OUTROOT + "{outpath}"
    log: OUTROOT + "logs/{outpath}.log"
    params:
        rexec = RROOT + "R/polySimIBD_simswf_wrapper.R",
        inputpath = lambda wildcards: sim_dict[wildcards.outpath]['input'],
        geodist = GEODISTROOT,
        outdir = OUTROOT,
    shell:
        r"""
        Rscript {params.rexec} \
        --input {params.inputpath} \
        --geodist {params.geodist}
        --output {output} \
        2> {log}
        """
